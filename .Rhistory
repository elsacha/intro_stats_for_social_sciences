((28/30)*.3) + .3 + (23/30)*.4
.2 + .15 + .12 + ((28/30)*.2) + (23/30)*.3
.2 + .15 + .13 + ((28/30)*.2) + (23/30)*.3
.2 + .15 + .15 + ((28/30)*.2) + (23/30)*.3
.2 + .15 + .13 + ((28/30)*.2) + (23/30)*.3
.2 + .15 + .05 + ((28/30)*.2) + (23/30)*.3
.2 + .15 + .04 + ((28/30)*.2) + (23/30)*.3
.2 + .15 + .03 + ((28/30)*.2) + (23/30)*.3
16/20
4/6
5/6
68/(68+109)
109/(109+89)
177/360
(94+89)/360
113/626
17/43
17/52
43/626
32/(85+32+31)
81/(85+32+31)
(85+32+31)
10/148
40/81
40/95
40/85
40/148
81/148
.27/.547
85/148
40/67
(40/148)*(81/148)
45/148
67/148
.304/.453
45/67
library(SDSFoundations)
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
#2. Create a subset of the data that only contains data from 1990 onward.
world1990 <- world[world$year >= 1990, ]
#3. Create a new variable that is "years since 1990".
# Subset data for just Denmark and Belarus
world1990$time <- us_select$year - 1990
#4. Create two new data frames --- one for each country of interest.
dnk <- world1990[world$Country.Code == "DNK",]
blr <- world1990[world$Country.Code == "BLR",]
#5. Determine the best-fitting model (exponential or logistic) for internet usage in each country from 1990 onward.
#DNK
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
#BLR
expFit(blr$time, blr$int.prop)
logisticFit(blr$time, blr$int.prop)
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
world1990 <- world[world$year >= 1990, ]
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
world1990 <- world[world$year >= 1990, ]
dnk <- world1990[world$Country.Code == "DNK",]
blr <- world1990[world$Country.Code == "BLR",]
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
head(dnk)
head(blr)
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
#2. Create a subset of the data that only contains data from 1990 onward.
world1990 <- world[world$year >= 1990, ]
#3. Create a new variable that is "years since 1990".
world1990$time <- world1990$year- 1990
dnk <- world1990[world$Country.Code == "DNK",]
blr <- world1990[world$Country.Code == "BLR",]
head(blr)
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
expFit(blr$time, blr$int.prop)
logisticFit(blr$time, blr$int.prop)
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
expFit(dnk$time, dnk$internet.users)
logisticFit(dnk$time, dnk$intinternet.users)
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
expFit(dnk$time, dnk$internet.users)
logisticFit(dnk$time, dnk$internet.users)
expFit(dnk$time, dnk$int.prop)
expFit(dnk$time, dnk$internet.users)
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
head(blr)
head(dnk)
expFit(blr$time, blr$int.prop)
logisticFit(blr$time, blr$int.prop)
tail(dnk)
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
world1990 <- world[world$year >= 1990, ]
world1990$time <- world1990$year- 1990
dnk <- world1990[world$Country.Code == "DNK",]
blr <- world1990[world$Country.Code == "BLR",]
head(dnk)
dnk <- world1990[world1990$Country.Code == "DNK",]
blr <- world1990[world1990$Country.Code == "BLR",]
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
logisticFit(blr$time, blr$int.prop)
logisticFit(dnk$time, dnk$int.prop)
logisticFit(blr$time, blr$int.prop)
logisticFit(dnk$time, dnk$int.prop)
log(30.883/.7967)/log(1.73)
dnk
blr
options(scipen=999) #disable scientific notation
blr
logisticFit(blr$time, blr$int.prop)
log(42.243/0.7987)/log(1.32)
logisticFitPred(dnk$time, dnk$int.prop,6)
logisticFitPred(dnk$time, dnk$int.prop,7)
logisticFitPred(blr$time, blr$int.prop,14)
logisticFitPred(blr$time, blr$int.prop,15)
log(30.883/.7967)/log(1.73)
log(30.883/.0967)/log(1.73)
log(42.243/0.0987)/log(1.32)
logisticFitPred(dnk$time, dnk$int.prop,10)
log(30.883/.0967)/log(1.73)
dnk
blr
brazil <- world[world$Country.Code == "BRA",]
# Select the years from 1990 and name the new data frame "us_select"
bra_select <- brazil[brazil$year >= 1995, ]
head(bra_select)
bra_select$mln.mob = bra_select$mobile.users/1000000
head(bra_select)
subset(bra_select, year==2000)
brazil
bra_select
subset(bra_select, mln.mob>100)
bra_select$time = bra_select$year-1995
bra_select
expFit(bra_select$time, bra_select$mln.mob)
logisticFit(bra_select$time, bra_select$mln.mob)
linFit(bra_select$time, bra_select$mln.mob)
tripleFit(bra_select$time, bra_select$mln.mob)
logisticFitPred(bra_select$time, bra_select$mln.mob,25)
logisticFitPred(bra_select$time, bra_select$mln.mob,24)
logisticFitPred(bra_select$time, bra_select$mln.mob,30)
367/257
76.64*1.46^14
3273.31/(1+43.59*1.57^(-14))
4379-15325
4379-3034
3273.31/(1+43.59*1.57^(-50))
3273.31/(1+43.59*1.57^(-100))
45/25
25/15
35/25
45/35
8.859/6.077
12.917/8.859
(45/15)^(1/3)
(45/15)^(1/4)
45/1.34^3
45/25
45/1.34
19*1.34^7
log(325/19)/log(1.34)
19*1.34^10
19*1.34^9
2000/(1+152.1*2.17^(-10))
2000/(1+152.1*2.17^(-20))
2000/(1+152.1*2.17^(-30))
2000/(1+152.1*2.17^(-40))
log(152.1)/log(2.17)
2000/(1+152.1*2.17^(-10))
2000/(1+152.1*2.17^(-11))
2000/(1+152.1*2.17^(-9))
3 mod 10
3 %% 10
3.2 %% 10
122 %% 100
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
#2. Create a subset of the data that only contains data from 1990 onward.
world1990 <- world[world$year >= 1990, ]
#3. Create a new variable that is "years since 1990".
world1990$time <- world1990$year- 1990
# Subset data for just Denmark and Belarus
#4. Create two new data frames --- one for each country of interest.
dnk <- world1990[world1990$Country.Code == "DNK",]
blr <- world1990[world1990$Country.Code == "BLR",]
#5. Determine the best-fitting model (exponential or logistic) for internet usage in each country from 1990 onward.
#DNK
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
#expFit(dnk$time, dnk$internet.users)
#logisticFit(dnk$time, dnk$internet.users)
#BLR
expFit(blr$time, blr$int.prop)
logisticFit(blr$time, blr$int.prop)
library(SDSFoundations)
world <- WorldBankData
world$int.prop <- world$internet.users/world$population
#2. Create a subset of the data that only contains data from 1990 onward.
world1990 <- world[world$year >= 1990, ]
#3. Create a new variable that is "years since 1990".
world1990$time <- world1990$year- 1990
# Subset data for just Denmark and Belarus
#4. Create two new data frames --- one for each country of interest.
dnk <- world1990[world1990$Country.Code == "DNK",]
blr <- world1990[world1990$Country.Code == "BLR",]
#5. Determine the best-fitting model (exponential or logistic) for internet usage in each country from 1990 onward.
#DNK
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
#expFit(dnk$time, dnk$internet.users)
#logisticFit(dnk$time, dnk$internet.users)
#BLR
expFit(blr$time, blr$int.prop)
logisticFit(blr$time, blr$int.prop)
#10%
log(30.883/.7967)/log(1.73)
options(scipen=999) #disable scientific notation
log(42.243/0.7987)/log(1.32)
logisticFitPred(dnk$time, dnk$int.prop,7)
logisticFitPred(blr$time, blr$int.prop,15)
log(30.883/.0967)/log(1.73)
log(42.243/0.0987)/log(1.32)
logisticFitPred(dnk$time, dnk$int.prop,10)
logisticFitPred(blr$time, blr$int.prop,15)
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
expFit(dnk$time, dnk$int.prop)
logisticFit(dnk$time, dnk$int.prop)
logisticFitPred(dnk$time, dnk$int.prop,10)
logisticFit(dnk$time, dnk$int.prop)
logisticFit(blr$time, blr$int.prop)
pnorm(1.38)
1-pnorm(1.38)
77 + c(-1.96*2.17, 1.96 * 2.17)
mean(c(180*130, 200*140, 190*220,230*110,80*120, 160*100,170*170))
mean(c(180/130, 200/140, 190/220,230/110,80/120, 160/100,170/170))
(180*130 + 200*140 + 190*220 + 230*110 + 80*120 + 160*100 + 170*170)/(130+140+220+110+120+100+170)
(180*130 + 200*140 + 190*220 + 230*110 + 80*120 + 160*100 + 170*170)/(180+200+190+230+80+160+170)
(180*130 + 200*140 + 190*220 + 230*110 + 80*120 + 160*100 + 170*170)/(130+140+220+110+120+100+170)
mean(c(180,200,190,230,80,160,170,130,140,220,110,120,100,170))
48.5/sqrt(14)
1.96*12.96
157.14 + c(-25.4, 25.4)
library(SDSFoundations)
survey <- StudentSurvey
nrow(survey)
head(survey,10)
subset(survey, happy <40)
# Calculate the population parameters
hist(survey$name_letters)
fivenum(survey$name_letters)
mean(survey$name_letters)
sd(survey$name_letters)
# Draw 1,000 samples of n=5 and find the mean of each sample.
xbar5 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =5)
xbar5[i] <-  mean(x)}
mean(survey$name_letters)
sd(survey$name_letters)
xbar5 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =5)
xbar5[i] <-  mean(x)}
# Graph the histogram of 1,000 sample means.
hist(xbar5,xlim=c(2,10))
# Calculate the mean and sd of the sampling distribution.
mean(xbar5)
sd(xbar5)
# Compare to the std dev predicted by the CTL.
sd(survey$name_letters)/sqrt(5)
#Repeat for samples of size n=15
xbar15 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =15)
xbar15[i] <- mean(x)}
hist(xbar15,xlim=c(2,10))
mean(xbar15)
sd(xbar15)
sd(survey$name_letters)/sqrt(15)
#Repeat for samples of size n=25
xbar25 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =25)
xbar25[i] <- mean(x)}
hist(xbar25,xlim=c(2,10))
mean(xbar25)
sd(xbar25)
sd(survey$name_letters)/sqrt(25)
mean(xbar5)
sd(xbar15)
mean(xbar15)
mean(survey$name_letters)
sd(xbar5)
sd(survey$name_letters)/sqrt(5)
sd(survey$name_letters)/sqrt(15)
sd(survey$name_letters)/sqrt(25)
mean(survey$name_letters)
sd(survey$name_letters)
hist(survey$name_letters)
fivenum(survey$name_letters)
head(survey)
hist(survey$happy)
fivenum(survey$happy)
mean(survey$happy)
sd(survey$happy)
# Calculate the population parameters
hist(survey$happy)
fivenum(survey$happy)
mean(survey$happy)
sd(survey$happy)
# Draw 1,000 samples of n=5 and find the mean of each sample.
xbar5 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$happy, size =5)
xbar5[i] <-  mean(x)}
# Graph the histogram of 1,000 sample means.
hist(xbar5,xlim=c(2,10))
# Calculate the mean and sd of the sampling distribution.
mean(xbar5)
sd(xbar5)
# Compare to the std dev predicted by the CTL.
sd(survey$happy)/sqrt(5)
#Repeat for samples of size n=15
xbar15 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$happy, size =15)
xbar15[i] <- mean(x)}
hist(xbar15,xlim=c(2,10))
mean(xbar15)
sd(xbar15)
sd(survey$happy)/sqrt(15)
#Repeat for samples of size n=25
xbar25 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$happy, size =25)
xbar25[i] <- mean(x)}
hist(xbar25,xlim=c(2,10))
mean(xbar25)
sd(xbar25)
sd(survey$happy)/sqrt(25)
hist(xbar5,xlim=c(2,10))
hist(xbar5)
mean(xbar5)
mean(xbar15)
hist(xbar15)
hist(xbar25)
mean(xbar25)
sd(xbar5)
sd(survey$happy)/sqrt(5)
sd(xbar25)
sd(survey$happy)/sqrt(25)
sd(xbar15)
sd(survey$happy)/sqrt(15)
mean(survey$happy)
sd(survey$happy)/sqrt(5)
sd(survey$happy)/sqrt(15)
sd(survey$happy)/sqrt(25)
sd(survey$happy)
mean(survey$happy)
hist(survey$happy)
head(survey)
hist(survey$austin)
fivenum(survey$austin)
mean(survey$austin)
sd(survey$austin)
sd(survey$austin)/sqrt(10)
xbar10 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$austin, size =10)
xbar10[i] <- mean(x)}
hist(xbar10)
mean(xbar10)
sd(xbar10)
sd(survey$austin)/sqrt(10)
1-pnorm((3.2-3.08)/.4)
(3.2-3.08)/.4
pnorm((3.2-3.08)/.4)
1-pnorm((3.2-3.08)/.4)
.4/sqrt(25)
pnorm((3.2-3.08)/.4)
pnorm((3.2-3.08)/.4) - pnorm((2.9-3.08)/.4)
11/sqrt(23)
(35.1-28)/11
(35.1-28)/(11/sqrt(23))
z_up <- (3.2 - 3.08) / (.4 / sqrt(25))
z_lo <- (2.9 - 3.08) / (.4 / sqrt(25))
z_up - z_lo
pnorm(z_up) - pnorm(z_lo)
1-pnorm(3.1)
1.5/sqrt(15)
SE <- 1.96*0.387
SE <- 1.96*0.387
SE
471.46 + c(-0.759,0.759)
library(SDSFoundations)
survey <- StudentSurvey
library(shiny)
library(shinyapps)
library(SDSFoundations)
survey <- StudentSurvey
nrow(survey)
cpleft <- c(16.3, 4.8, 10.7, 14.0, 15.7, 9.9, 29.3, 20.4, 15.7, 7.6, 16.2, 14.7, 15.0, 8.4, 23.3, 17.7)
cpright <- c(11.5, 3.5, 12.8, 7.9, 15.2, 9.8, 24.0, 14.9, 12.6, 8.2, 8.4, 11.0, 12.5, 9.2, 17.5, 11.1)
tcrit <- qt(.975, df=15); tcrit
#3d
3.1/.76
diffmean<-mean(cpleft) - mean(cpright)
t.test(cpleft, cpright, paired=T)
sd(cpleft - cpright)
#3f
3.05/sqrt(16)
#confidence interval
lower <- 3.1-2.131*0.76; lower
upper <- 3.1+2.131*0.76; upper
22.75−22.6666667
22.75 - 22.6666667
360/24
choose(6,2)
choose(5,2)
choose(5,3)
choose(5,4)
choose(10,3)
(10+0.5*0.001)/(100+0.5)
(10+0.5*0.001)/(100+0.5)
(10+0.8*0.001)/(100+0.8)
(10+10*0.001)/(100+10)#=0.09950746
(10+100*0.001)/(100+100)
choose(6,2)
2/sqrt(4*4)
4/sqrt(5*5)
print_wd()
pwd()
getwd()
setwd("~/Google Drive/Documents/Coursera/Introduction to Statistics for the Social Sciences/project/code")
load("statistics-project-gss.Rdata")
rawData <- nrow(subset(gss, !is.na(satjob)&!is.na(degree)))#40672
rawData <- cbind(gss["satjob"], gss["degree"])
data <- subset(rawData, !is.na(satjob) & !is.na(degree))
totalfreqSatjob <- joint$t
rowtotals <- as.vector(rowSums(totalfreqSatjob))
totalfreqSatjob <- cbind(totalfreqSatjob, rowtotals)
coltotals <- as.vector(colSums(totalfreqSatjob))
totalfreqSatjob <- rbind(totalfreqSatjob, coltotals)
totalfreqSatjob
library(gmodels)
joint <- CrossTable(data$satjob, data$degree)
totalfreqSatjob <- joint$t
rowtotals <- as.vector(rowSums(totalfreqSatjob))
totalfreqSatjob <- cbind(totalfreqSatjob, rowtotals)
coltotals <- as.vector(colSums(totalfreqSatjob))
totalfreqSatjob <- rbind(totalfreqSatjob, coltotals)
totalfreqSatjob
relfreqSatjob <- joint$prop.col
relfreqSatjob
df_rel = as.data(relfreqSatjob)
df_rel = as.dataframe(relfreqSatjob)
df_rel = as.data.frame(relfreqSatjob)
str(df_rel)
head(df_rel)
ggplot(data=df_rel, aes(x=x, y=y)) + geom_bar(stat="identity")
library(ggplot2)
ggplot(data=df_rel, aes(x=x, y=y)) + geom_bar(stat="identity")
ggplot(data=df_rel, aes(x=x, y=y)) + geom_point()
ggplot(data=df_rel, aes(x=y, y=x)) + geom_point()
df_rel
colnames(df_rel) = c("Satisfaction", "Degree", "Frequency")
df_rel
ggplot(data=df_rel, aes(x=Degree, y=Satisfaction)) + geom_point()
lt_hs = subset(df_rel, Degree=="Lt High School")
lt_hs
lt_hs_rel = subset(df_rel, Degree=="Lt High School")
ggplot(data=lt_hs_rel, aes(x=Degree, y=Satisfaction)) + geom_point()
ggplot(data=lt_hs_rel, aes(x=Degree)) + geom_bar()
ggplot(data=lt_hs_rel, aes(x=Degree)) + geom_bar() + facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Degree)) + geom_point(stat="identity") + facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Degree)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Degree, y=Satisfaction)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Degree, y=Satisfaction)) + geom_bar(stat="identity") #+ facet_wrap(~Satisfaction)
ggplot(data=df_rel, aes(x=Degree, y=Satisfaction)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
ggplot(data=df_rel, aes(x=Degree, y=Satisfaction)) + geom_bar(stat="identity") #+ facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Degree, y=Satisfaction)) + geom_bar(stat="identity") #+ facet_wrap(~Satisfaction)
str(df_rel)
ggplot(data=lt_hs_rel, aes(x=Degree, y=Satisfaction)) + geom_line() #+ facet_wrap(~Satisfaction)
ggplot(data=df_rel, aes(x=Degree, y=Satisfaction)) + geom_line() #+ facet_wrap(~Satisfaction)
lt_hs_rel
ggplot(data=lt_hs_rel, aes(x=Satisfaction, y=Frequency)) + geom_line() #+ facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Satisfaction, y=Frequency)) + geom_bar() #+ facet_wrap(~Satisfaction)
ggplot(data=lt_hs_rel, aes(x=Satisfaction, y=Frequency)) + geom_bar(stat="identity") #+ facet_wrap(~Satisfaction)
ggplot(data=df_rel, aes(x=Satisfaction, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Degree)
df_rel
ggplot(data=df_rel, aes(x=Satisfaction, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(Satisfaction~Degree)
ggplot(data=lt_hs_rel, aes(x=Satisfaction, y=Frequency)) + geom_bar(stat="identity") #+ facet_wrap(~Satisfaction)
ggplot(data=df_rel, aes(x=Satisfaction, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Degree)
ggplot(data=df_rel, aes(x=Degree, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
df_rel = as.data.frame(relfreqSatjob)
ggplot(data=df_rel, aes(x=Degree, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
df_rel = as.data.frame(relfreqSatjob)
colnames(df_rel) = c("Satisfaction", "Degree", "Frequency")
ggplot(data=df_rel, aes(x=Degree, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
df_rel = as.data.frame(relfreqSatjob)
colnames(df_rel) = c("Satisfaction", "Degree", "Frequency")
ggplot(data=df_rel, aes(x=Degree, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)
ggplot(data=df_rel, aes(x=Degree, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)++ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=df_rel, aes(x=Degree, y=Frequency)) + geom_bar(stat="identity") + facet_wrap(~Satisfaction)+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
